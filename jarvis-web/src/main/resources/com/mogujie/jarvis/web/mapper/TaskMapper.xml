<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mogujie.jarvis.web.mapper.TaskMapper">



    <sql id="condition">
        <where>
            <if test="jobIdList!=null">
                job.jobId IN
                <foreach collection="jobIdList" item="jobId" open="(" close=")" separator=",">
                    #{jobId}
                </foreach>
            </if>
            <if test="jobNameList!=null">
                AND job.jobName IN
                <foreach collection="jobNameList" item="jobName" open="(" close=")" separator=",">
                    #{jobName}
                </foreach>
            </if>
            <if test="jobTypeList!=null">
                AND job.jobType IN
                <foreach collection="jobTypeList" item="jobType" open="(" close=")" separator=",">
                    #{jobType}
                </foreach>
            </if>
            <if test="executeUserList!=null">
                AND task.executeUser IN
                <foreach collection="executeUserList" item="executeUser" open="(" close=")" separator=",">
                    #{executeUser}
                </foreach>
            </if>
            <if test="startDate!=null and startDate!=''">
                AND task.executeStartTime>=#{startDate}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[
                  AND task.executeEndTime<#{endDate}
                ]]>
            </if>
            <if test="scheduleDate!=null and scheduleDate!=''">
                <![CDATA[
                  AND (task.scheduleTime>=#{scheduleDate} AND task.scheduleTime<DATE_ADD(#{scheduleDate},INTERVAL 1 DAY))
                ]]>
            </if>
            <if test="executeDate!=null and executeDate!=''">
                <![CDATA[
                  AND task.executeStartTime>=#{executeDate} AND task.executeStartTime<=DATE_ADD(#{executeDate},INTERVAL 1 DAY)
                ]]>

            </if>
            <if test="taskStatus!=null">
                AND
                <foreach collection="taskStatus" item="status" index="index" open="(" close=")" separator="OR">
                    (task.status=#{status})
                </foreach>
            </if>
        </where>
    </sql>

    <sql id="pager">
        <if test="offset!=null and limit!=null">
            limit #{offset},#{limit}
        </if>
    </sql>

    <sql id="order">
        <if test="orderField!=null">
            <choose>
                <when test="order!=null and order=='ASC'">
                    ORDER  BY #{orderField} ASC
                </when>
                <when test="order!=null and order=='DESC'">
                    ORDER  BY #{orderField} DESC
                </when>
                <otherwise>
                    ORDER  BY #{orderField}
                </otherwise>
            </choose>

        </if>
    </sql>


    <select id="getCountByCondition" parameterType="TaskQo" resultType="Integer">
        SELECT COUNT(1) FROM task LEFT JOIN job ON task.jobId=job.jobId
        <include refid="condition" />
    </select>

    <select id="getTasksByCondition" parameterType="TaskQo" resultType="TaskVo">
        SELECT *,time_to_sec(TIMEDIFF(task.executeEndTime,task.executeStartTime)) AS executeTime
        FROM task LEFT JOIN job ON task.jobId=job.jobId LEFT JOIN app ON job.appId=app.appId
        <include refid="condition" />
        ORDER BY scheduleTime DESC,executeEndTime DESC,executeStartTime DESC
        <include refid="pager" />
    </select>

    <select id="getTaskById" parameterType="Long" resultType="TaskVo">
        SELECT *,time_to_sec(TIMEDIFF(task.executeEndTime,task.executeStartTime)) AS executeTime FROM task WHERE taskId=#{taskId} limit 0,1
    </select>


    <select id="getAllExecuteUser" resultType="String">
        SELECT DISTINCT executeUser FROM task;
    </select>


    <!--******************************************************-->
    <!--*****************执行计划相关*************-->
    <!--******************************************************-->
    
    <sql id="planCondition">
        <where>
            <if test="jobIdList!=null">
                task.jobId IN
                <foreach collection="jobIdList" item="jobId" open="(" close=")" separator=",">
                    #{jobId}
                </foreach>
            </if>
            <if test="jobNameList!=null and jobNameList!=''">
                AND job.jobName IN
                <foreach collection="jobNameList" item="jobName" open="(" close=")" separator=",">
                    #{jobName}
                </foreach>
            </if>
            <if test="jobTypeList!=null and jobTypeList!=''">
                AND job.jobType IN
                <foreach collection="jobTypeList" item="jobType" open="(" close=")" separator=",">
                    #{jobType}
                </foreach>
            </if>
            <if test="priorityList!=null">
                AND job.priority IN
                <foreach collection="priorityList" item="priority" open="(" close=")" separator=",">
                    #{priority}
                </foreach>
            </if>
            <if test="executeUserList!=null and executeUserList!=''">
                AND task.executeUser IN
                <foreach collection="executeUserList" item="executeUser" open="(" close=")" separator=",">
                    #{executeUser}
                </foreach>
            </if>
            <if test="scheduleTime!=null">
                <![CDATA[
                  AND (task.scheduleTime>=#{scheduleTime} AND task.scheduleTime<(DATE_ADD(#{scheduleTime},INTERVAL 1 DAY)))
                ]]>
            </if>
        </where>
    </sql>

    <sql id="orderCondition">
        <choose>
            <when test="">

            </when>
            <when test="">

            </when>
            <otherwise>

            </otherwise>
        </choose>
    </sql>

    
    <select id="getPlanCountByCondition" parameterType="PlanQo" resultType="Integer">
        SELECT COUNT(1) FROM task LEFT JOIN job ON task.jobId=job.jobId
        <include refid="planCondition" />
    </select>
    
    <select id="getPlansByCondition" parameterType="PlanQo" resultType="PlanVo">
        SELECT
          task.*,
          job.jobName,
          job.jobType,
          job.submitUser,
          job.priority,
          job.appId,
          job.workerGroupId,
          app.appName,
          time_to_sec(TIMEDIFF(task.executeEndTime,task.executeStartTime)) AS executeTime
        FROM task LEFT JOIN job ON task.jobId=job.jobId LEFT JOIN app ON job.appId=app.appId
        <include refid="planCondition" />
        ORDER BY task.scheduleTime DESC
        <include refid="pager" />
    </select>



    <select id="getTaskByIds" resultType="TaskVo">
        SELECT task.*,time_to_sec(TIMEDIFF(task.executeEndTime,task.executeStartTime)) AS executeTime,job.jobName
        FROM task LEFT JOIN job ON task.jobId=job.jobId
        WHERE taskId IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
    
    <select id="getRecentExecuteTaskByJobId" parameterType="List" resultType="PlanVo">
        <foreach collection="list" item="jobId" open="" close="" separator="UNION">
            (
            SELECT taskId,jobId,time_to_sec(TIMEDIFF(task.executeEndTime,task.executeStartTime)) as executeTime
              from task
                where status=4 and jobId=#{jobId}
                  ORDER BY executeEndTime DESC limit 10
            )
        </foreach>
    </select>

</mapper>